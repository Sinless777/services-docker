version: "3.9"

################
##  NETWORKS  ##
################
networks:
  helix-ai:
    driver: bridge

  proxy-net:
    external: true

  weave-net:
    external: true

###############
##  Volumes  ##
###############

volumes:
  mysql_data1:
    driver: local
    driver_opts:
      type: none
      device: /home/sinless777/services/helix/mysql
      o: bind

services:
  #################################
  ###                           ###
  ###       Helix Ai Stack      ###
  ###                           ###
  #################################

  ###   CONSUL   ###

  consul-server1:
    image: hashicorp/consul:1.11.2
    container_name: consul-server1
    hostname: consul-server1
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - vault-server
    restart: always
    volumes:
      - /home/sinless777/services/helix/consul/server1.json:/consul/config/server1.json
      - /home/sinless777/services/helix/certs/:/consul/config/certs/:ro
      - /home/sinless777/services/helix/consul/acls/:/consul/config/acls/
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -bootstrap-expect=3"

  consul-server2:
    image: hashicorp/consul:1.11.2
    container_name: consul-server2
    hostname: consul-server2
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - vault-server
    restart: always
    volumes:
      - /home/sinless777/services/helix/consul/server2.json:/consul/config/server2.json
      - /home/sinless777/services/helix/certs/:/consul/config/certs/:ro
      - /home/sinless777/services/helix/consul/acls/:/consul/config/acls/
    command: "agent -bootstrap-expect=3"

  consul-server3:
    image: hashicorp/consul:1.11.2
    container_name: consul-server3
    hostname: consul-server3
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - vault-server
    volumes:
      - /home/sinless777/services/helix/consul/server3.json:/consul/config/server3.json
      - /home/sinless777/services/helix/certs/:/consul/config/certs/:ro
      - /home/sinless777/services/helix/consul/acls/:/consul/config/acls/
    command: "agent -bootstrap-expect=3"

  consul-client:
    image: hashicorp/consul:1.11.2
    container_name: consul-client
    hostname: consul-client
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /home/sinless777/services/helix/consul/client.json:/consul/config/client.json
      - /home/sinless777/services/helix/certs/:/consul/config/certs/:ro
      - /home/sinless777/services/helix/tokens/:/consul/config/tokens/
    command: "agent"

  ###   VAULT   ###

  vault-server:
    image: hashicorp/vault:1.9.6
    container_name: vault-server
    hostname: vault-server
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://vault-server:8200"
      VAULT_API_ADDR: "http://vault-server:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"
      CONSUL_HTTP_ADDR: "consul-server1:8500"
      CONSUL_HTTP_TOKEN: "e95b599e-166e-7d80-08ad-aee76e7ddf19"
    cap_add:
      - IPC_LOCK
    volumes:
      - /home/sinless777/services/helix/vault/policies:/vault/policies
      - /home/sinless777/services/helix/vault/vault.hcl:/etc/vault.hcl
      - /home/sinless777/services/helix/vault/data:/mnt/vault/data
    command: "server -config=/etc/vault.hcl"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8200 || exit 1
      interval: 10s
      retries: 12
      start_period: 10s
      timeout: 10s

  vdb:
    image: mysql:8.0
    volumes:
      - mysql_data2:/var/lib/mysql
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: Shellshocker93
      MYSQL_DATABASE: vault
      MYSQL_USER: vault
      MYSQL_PASSWORD: vault


  ###   MONITORING   ###

  grafana:
    image: grafana/grafana:7.5.3
    container_name: grafana
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /home/sinless777/services/helix/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /home/sinless777/services/helix/grafana/provisioning/:/etc/grafana/provisioning
      - /home/sinless777/services/helix/grafana/dashboards/:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v2.26.0
    container_name: prometheus
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /home/sinless777/services/helix/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100

  ###   SONAR   ###

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    hostname: sonarqube
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "9900:9000"
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://pg:5432/sonar
    depends_on:
      - pg

  pg:
    image: postgres:13.2
    container_name: pg
    hostname: pg
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "5432:5432"
    volumes:
      - /home/sinless777/services/helix/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar

