version: "3.8"

secrets:
  ca.crt:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificate_authority/ca/ca.crt

  elasticsearch.keystore:
    file: ${SECRETS_DIR}/elastic_stack/secrets/elasticsearch.keystore

  elastic-stack-ca.p12:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificate_authority/elastic-stack-ca.p12

  elasticsearch.key:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/elasticsearch/elasticsearch.key

  elasticsearch.cert:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/elasticsearch/elasticsearch.crt

  kibana.key:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/kibana/kibana.key

  kibana.cert:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/kibana/kibana.crt

  logstash.pkcs8.key:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/logstash/logstash.pkcs8.key

  logstash.key:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/logstash/logstash.key

  logstash.p12:
    file: ${SECRETS_DIR}/elastic_stack/secrets/keystores/logstash/logstash.p12

  logstash.cert:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/logstash/logstash.crt

  fleet-server.cert:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/fleet-server/fleet-server.crt

  fleet-server.key:
    file: ${SECRETS_DIR}/elastic_stack/secrets/certificates/fleet-server/fleet-server.key

################
##  NETWORKS  ##
################
networks:
  elastic-net:
    name: elastic-net
    driver: bridge

  proxy-net:
    external: true

  weave-net:
    external: true

services:
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    restart: unless-stopped
    environment:
      CONFIG_DIR: ${ELASTIC_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      bootstrap.memory_lock: "true"
      discovery.type: single-node
    volumes:
      - ${SECRETS_DIR}/elastic_stack/elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro
      - ${SECRETS_DIR}/elastic_stack/elasticsearch/data:/usr/share/elasticsearch/data
    secrets:
      - source: elasticsearch.keystore
        target: ${ELASTIC_DIR}/config/elasticsearch.keystore
      - source: ca.crt
        target: ${ELASTIC_DIR}/config/ca.crt
      - source: elasticsearch.cert
        target: ${ELASTIC_DIR}/config/elasticsearch.crt
      - source: elasticsearch.key
        target: ${ELASTIC_DIR}/config/elasticsearch.key
    expose:
      - 9200
      - 9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    networks:
      - elastic-net
      - weave-net
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      co.elastic.logs/enabled: true
      co.elastic.logs/module: elasticsearch
      co.elastic.logs/fileset: server
      co.elastic.metrics/raw: "[{\"module\":\"elasticsearch\",\"hosts\":\"http://elasticsearch:9200\",\"period\":\"10s\",\"xpack.enabled\":\"true\",\"username\":\"elastic\",\"password\":\"$ELASTIC__INITIAL_PASSWORD\"}]"
    healthcheck:
      test: curl -s https://elasticsearch:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    container_name: kibana
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    restart: unless-stopped
    volumes:
      - ${SECRETS_DIR}/elastic_stack/kibana/config/kibana.yml:${KIBANA_DIR}/config/kibana.yml:ro
      - ${SECRETS_DIR}/elastic_stack/kibana/data:/usr/share/kibana/data
    environment:
      CONFIG_DIR: ${KIBANA_DIR}/config
      ELASTICSEARCH_URL: https://elasticsearch:9200
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ENCRYPTION_KEY: ${XPACK_ENCRYPTION_KEY}
      KIBANA_URL: ${KIBANA_URL}
      XPACK_FLEET_AGENTS_FLEET_SERVER_HOSTS: '["https://fleet-server:8220"]'
      XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS: '["https://elasticsearch:9200"]'
    secrets:
      - source: ca.crt
        target: ${KIBANA_DIR}/config/ca.crt
      - source: kibana.cert
        target: ${KIBANA_DIR}/config/kibana.crt
      - source: kibana.key
        target: ${KIBANA_DIR}/config/kibana.key
    ports:
      - "5601:5601"
    networks:
      - elastic-net
      - weave-net
      - proxy-net
    labels:
      co.elastic.logs/enabled: false
      co.elastic.logs/module: kibana
      co.elastic.logs/fileset: log
      co.elastic.metrics/raw: "[{\"module\":\"kibana\",\"hosts\":\"http://kibana:5601\",\"period\":\"10s\",\"xpack.enabled\":\"true\",\"username\":\"kibana_system\",\"password\":\"$ELASTIC__INITIAL_PASSWORD\"}]"
      com.centurylinklabs.watchtower.enable: "true"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    healthcheck:
      test: curl -s https://kibana:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    container_name: logstash
    hostname: logstash
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    restart: unless-stopped
    volumes:
      - ${SECRETS_DIR}/elastic_stack/logstash/config/logstash.yml:${LOGSTASH_DIR}/config/logstash.yml:ro
      - ${SECRETS_DIR}/elastic_stack/logstash/pipeline/logstash.conf:${LOGSTASH_DIR}/pipeline/logstash.conf:ro
      - ${SECRETS_DIR}/elastic_stack/logstash/pipeline/metricbeat.conf:${LOGSTASH_DIR}/pipeline/metricbeat.conf
    environment:
      CONFIG_DIR: ${LOGSTASH_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      LS_JAVA_OPTS: "-Xmx${LOGSTASH_HEAP} -Xms${LOGSTASH_HEAP}"
    secrets:
      - source: ca.crt
        target: ${LOGSTASH_DIR}/config/ca.crt
      - source: logstash.cert
        target: ${LOGSTASH_DIR}/config/logstash.crt
      - source: logstash.key
        target: ${LOGSTASH_DIR}/config/logstash.key
      - source: logstash.pkcs8.key
        target: ${LOGSTASH_DIR}/config/logstash.pkcs8.key
      - source: logstash.p12
        target: ${LOGSTASH_DIR}/config/logstash.p12
    networks:
      - elastic-net
      - weave-net
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    expose:
      - 12201/udp
      - 5044
      - 9600
      - 5000/tcp
      - 5000/udp
    depends_on:
      - elasticsearch
      - kibana
    links:
      - elasticsearch
      - kibana
    healthcheck:
      test: curl -s https://logstash:9600 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  fleet-server:
    container_name: fleet-server
    hostname: fleet-server
    image: docker.elastic.co/beats/elastic-agent:${ELK_VERSION}
    restart: always
    environment:
      FLEET_SERVER_ENABLE: "1"
      FLEET_SERVER_ELASTICSEARCH_HOST: "https://elasticsearch:9200"
      FLEET_SERVER_ELASTICSEARCH_USERNAME: ${ELASTIC_USERNAME}
      FLEET_SERVER_ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      FLEET_SERVER_ELASTICSEARCH_CA: /etc/pki/tls/certs/ca.crt
      FLEET_SERVER_CERT: /etc/pki/tls/certs/fleet-server.pem
      FLEET_SERVER_CERT_KEY: /etc/pki/tls/private/fleet-server-key.pem
      FLEET_SERVER_INSECURE_HTTP: "1"
      FLEET_POLICY_NAME: "fleet-server"
      KIBANA_FLEET_SETUP: "1"
      FLEET_SERVER_HOST: "https://0.0.0.0:8220"
      KIBANA_HOST: "http://kibana:5601"
      KIBANA_FLEET_USERNAME: ${ELASTIC_USERNAME}
      KIBANA_FLEET_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_FLEET_CA: /etc/pki/tls/certs/ca.crt
      KIBANA_FLEET_CERT: /etc/pki/tls/certs/fleet-server.pem
      KIBANA_FLEET_CERT_KEY: /etc/pki/tls/private/fleet-server-key.key
      FLEET_SERVER_SERVICE_TOKEN: ${FLEET_SERVER_SERVICE_TOKEN}
      FLEET_ENROLL: "1"
      ELK_VERSION: ${ELK_VERSION}
      ENROLL_FORCE: 1 # force re-enrollment
    secrets:
      - source: ca.crt
        target: /etc/pki/tls/certs/ca.crt
      - source: fleet-server.cert
        target: /etc/pki/tls/certs/fleet-server.pem
      - source: fleet-server.key
        target: /etc/pki/tls/private/fleet-server-key.pem
      - source: kibana.cert
        target: /etc/pki/tls/certs/fleet-server.pem
      - source: kibana.key
        target: /etc/pki/tls/private/fleet-server-key.key
    networks:
      - elastic-net
      - weave-net
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      co.elastic.logs/enabled: false
      co.elastic.metrics/enabled: false
    ports:
      - 8220:8220
    depends_on:
      - elasticsearch
      - kibana
    links:
      - elasticsearch
      - kibana
    healthcheck:
      test: "curl -f https://127.0.0.1:8220/api/status | grep HEALTHY 2>&1 >/dev/null"
      retries: 12
      interval: 5s

