setup.dashboards.enabled: true

# Forcing Elasticsearch index template 
setup.template.overwrite: true
setup.kibana:
  host: "https://kibana:5601"
  ssl.enabled: true
  ssl.certificate_authorities: [ "${CONFIG_DIR}/ca.crt" ]
  ssl.certificate: "${CONFIG_DIR}/metricbeat.crt"
  ssl.key: "${CONFIG_DIR}/metricbeat.key"

metricbeat.autodiscover:
  providers:
    - type: docker
      hints.enabled: true

metricbeat.modules:
  - module: docker
    metricsets:
      - "container"
      - "cpu"
      - "diskio"
      - "healthcheck"
      - "info"
      - "image"
      - "memory"
      - "network"
    hosts: ["unix:///var/run/docker.sock"]
    period: 10s
    enabled: true
  - module: elasticsearch
    xpack.enabled: true
    period: 10s
    hosts: ["https://elasticsearch:9200"]
    #scope: node
    username: '${ELASTIC_USERNAME:}'
    password: '${ELASTIC_PASSWORD:}'
    ssl.enabled: true
    ssl.certificate_authorities: ["${METRICBEAT_DIR}/config/ca.crt"]
    ssl.certificate: "${METRICBEAT_DIR}/config/fleet-server.cert"
    ssl.key: "${METRICBEAT_DIR}/config/metricbeat.key"
    #ssl.verification_mode: "full"


processors:
  - add_cloud_metadata: ~

monitoring:
  enabled: true
  elasticsearch:
    hosts: ["https://elasticsearch:9200"]
    username: beats_system
    ssl.certificate_authorities: [ "${CONFIG_DIR}/ca.crt" ]
    ssl.certificate: ${CONFIG_DIR}/metricbeat.crt
    ssl.key: ${CONFIG_DIR}/metricbeat.key

output.logstash:
  hosts: ["https://logstash:5044"]
  ssl.certificate_authorities: ${CONFIG_DIR}/ca.crt
  ssl.certificate: ${CONFIG_DIR}/metricbeat.crt
  ssl.key: ${CONFIG_DIR}/metricbeat.key
  index: metricbeat